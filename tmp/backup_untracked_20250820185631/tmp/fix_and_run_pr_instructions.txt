Fix & exact PowerShell commands to create the PR (JSON parsing error -> 400)

Summary:
- You hit "400 Problems parsing JSON" because curl sent the body as form data (Content-Type application/x-www-form-urlencoded) or the JSON string quoting was wrong.
- Use PowerShell's Invoke-RestMethod (recommended) which builds valid JSON, or use curl.exe but explicitly set Content-Type: application/json and send JSON correctly.

Option A — Recommended: PowerShell (one-liner)
1) Open PowerShell in the repo root (C:\Users\lukas\zorentha-ai\football-betting-app)
2) Set your PAT for this session (do NOT paste it here):
   $env:GITHUB_TOKEN = 'ghp_<YOUR_PAT_HERE>'

3) Run this one-liner (it will POST a PR from the rebased branch):
   $body = @{
     title = "Make OpenAI expected output tokens configurable and remove hardcoded cap"
     head  = "feature/openai-expected-output-tokens-rebased"
     base  = "main"
     body  = "See PR_DESCRIPTION.md in repository for full details."
   }
   Invoke-RestMethod -Uri 'https://api.github.com/repos/Zorentha/football-betting-app/pulls' -Method Post -Headers @{ Authorization = "token $env:GITHUB_TOKEN"; Accept = "application/vnd.github+json" } -Body ($body | ConvertTo-Json -Depth 10)

4) Paste the full output here (it will be an object / JSON). If creation succeeded, look for html_url.

Option B — curl.exe (PowerShell) — explicit Content-Type
1) Set PAT in session:
   $env:GITHUB_TOKEN = 'ghp_<YOUR_PAT_HERE>'

2) Single-line curl (PowerShell):
   $json = '{"title":"Make OpenAI expected output tokens configurable and remove hardcoded cap","head":"feature/openai-expected-output-tokens-rebased","base":"main","body":"See PR_DESCRIPTION.md in repository for full details."}'
   curl.exe -v -H "Authorization: token $env:GITHUB_TOKEN" -H "Accept: application/vnd.github+json" -H "Content-Type: application/json" --data-binary $json https://api.github.com/repos/Zorentha/football-betting-app/pulls

3) Paste full output here.

What I'll look for in your output:
- If success (201), response JSON includes "html_url" — paste that URL.
- If failure (401), token still invalid or sanitized incorrectly — confirm token exactness.
- If failure (422 or 400), paste the "Response body" JSON so I can fix payload or branch name.

Extra checks (if problems persist)
- Verify the branch exists on origin and is the one you want:
  git ls-remote origin refs/heads/feature/openai-expected-output-tokens-rebased
  (You can run this in PowerShell by invoking git.exe or checking on GitHub branches page)
- If you prefer to create PR from the original branch instead of rebased, replace head with "feature/openai-expected-output-tokens" in the commands above.

Run the recommended PowerShell Invoke-RestMethod command now and paste the exact console output here (or just the html_url if the PR was created). If anything errors, paste the error + response body verbatim.
