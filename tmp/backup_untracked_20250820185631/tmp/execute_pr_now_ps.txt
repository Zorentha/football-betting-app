Exact PowerShell steps — copy/paste these lines into PowerShell (one at a time)

1) Change to repo directory (if not already):
cd C:\Users\lukas\zorentha-ai\football-betting-app

2) Set your PAT into the session (replace the placeholder, do NOT paste token into chat):
$env:GITHUB_TOKEN = 'ghp_<YOUR_PAT_HERE>'

3) Sanitize and create the PR (runs the helper which uses the rebased branch):
powershell -NoProfile -ExecutionPolicy Bypass -File tmp/sanitize_and_create_pr.ps1

-- OR, single-line alternative (direct curl, if you prefer)
$env:GITHUB_TOKEN = 'ghp_<YOUR_PAT_HERE>'; curl.exe -v -H "Authorization: token $env:GITHUB_TOKEN" -H "Accept: application/vnd.github+json" -d '{"title":"Make OpenAI expected output tokens configurable and remove hardcoded cap","head":"feature/openai-expected-output-tokens-rebased","base":"main","body":"See PR_DESCRIPTION.md in repository for full details."}' https://api.github.com/repos/Zorentha/football-betting-app/pulls

What to expect:
- If successful: JSON printed with "html_url" — paste that URL here.
- If it fails (401 or 422): paste full console output (including any Response body lines) here so I can diagnose.

Quick checklist (run locally, then paste outputs here):
- [ ] cd into repo (step 1)
- [ ] export token into session (step 2)
- [ ] run sanitize_and_create_pr.ps1 (step 3)
- [ ] paste resulting output here

Notes:
- sanitize_and_create_pr.ps1 will trim surrounding characters and call the API helper tmp/auto_create_pr.ps1.
- The script targets head = feature/openai-expected-output-tokens-rebased (fixes unrelated-history).
- If you get 401: double-check PAT is exactly copied, no surrounding < > or quotes, and token is not expired.
- If you get 422: paste exact response body; I can fix validation (branch name or payload).

Run the three lines above in PowerShell and paste the output here.
